[{"/Users/vctr/Desktop/instagram-clone/src/index.js":"1","/Users/vctr/Desktop/instagram-clone/src/reportWebVitals.js":"2","/Users/vctr/Desktop/instagram-clone/src/App.js":"3","/Users/vctr/Desktop/instagram-clone/src/page/Direct.js":"4","/Users/vctr/Desktop/instagram-clone/src/page/Explore.js":"5","/Users/vctr/Desktop/instagram-clone/src/component/Header.js":"6","/Users/vctr/Desktop/instagram-clone/src/component/Post.js":"7","/Users/vctr/Desktop/instagram-clone/src/firebase.js":"8","/Users/vctr/Desktop/instagram-clone/src/component/Account.js":"9","/Users/vctr/Desktop/instagram-clone/src/component/ImageUpload.js":"10","/Users/vctr/Desktop/instagram-clone/src/component/Comment.js":"11","/Users/vctr/Desktop/instagram-clone/src/component/Footer.js":"12"},{"size":598,"mtime":1609773876337,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609758509662,"results":"15","hashOfConfig":"14"},{"size":11433,"mtime":1610289629470,"results":"16","hashOfConfig":"14"},{"size":467,"mtime":1610269798471,"results":"17","hashOfConfig":"14"},{"size":474,"mtime":1610269791490,"results":"18","hashOfConfig":"14"},{"size":10436,"mtime":1610276068634,"results":"19","hashOfConfig":"14"},{"size":12334,"mtime":1610289033114,"results":"20","hashOfConfig":"14"},{"size":587,"mtime":1610288685138,"results":"21","hashOfConfig":"14"},{"size":455,"mtime":1610269913797,"results":"22","hashOfConfig":"14"},{"size":3027,"mtime":1610287930361,"results":"23","hashOfConfig":"14"},{"size":3333,"mtime":1610280139254,"results":"24","hashOfConfig":"14"},{"size":211,"mtime":1610283938708,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"13i0975",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/vctr/Desktop/instagram-clone/src/index.js",[],["52","53"],"/Users/vctr/Desktop/instagram-clone/src/reportWebVitals.js",[],"/Users/vctr/Desktop/instagram-clone/src/App.js",["54","55"],"import './App.css';\nimport { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { db, auth, storage } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core/';\n\nimport Header from './component/Header';\nimport Post from './component/Post';\nimport Account from './component/Account';\nimport ImageUpload from './component/ImageUpload';\nimport Footer from './component/Footer';\n\nimport Direct from './page/Direct';\nimport Explore from './page/Explore';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [posts, setPosts] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [openSignIn, setOpenSingIn] = useState(false);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [user, setUser] = useState(null);\n\n    const [userImg, setUserImg] = useState(null);\n    const [userImgUrl, setUserImgUrl] = useState(\n        'https://file3.instiz.net/data/file3/2018/12/13/6/4/8/648508f2dfbf6507e5ea892e968a27cf.jpg',\n    );\n    const logoUrl =\n        'https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png';\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser) {\n                console.log(authUser);\n                setUser(authUser);\n                // setUserImgUrl(user.photoURL);\n            } else {\n                setUser(null);\n            }\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, [user, username]);\n\n    useEffect(() => {\n        db.collection('posts')\n            .orderBy('timestamp', 'desc')\n            .onSnapshot((snapshot) => {\n                setPosts(\n                    snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        post: doc.data(),\n                    })),\n                );\n            });\n    }, []);\n\n    const signUp = (e) => {\n        e.preventDefault();\n        storage.ref(`profileImage/${userImg.name}`).put(userImg);\n\n        storage\n            .ref('profileImage')\n            .child(userImg.name)\n            .getDownloadURL()\n            .then((url) => {\n                auth.createUserWithEmailAndPassword(email, password)\n                    .then((authUser) => {\n                        alert('register success');\n                        authUser.user.updateProfile({\n                            displayName: username,\n                            photoURL: url,\n                        });\n                    })\n                    .catch((error) => alert(error.message));\n            });\n        setOpen(false);\n    };\n\n    const signIn = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n            .then(alert('login success'))\n            .catch((error) => alert(error.message));\n        setOpenSingIn(false);\n    };\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            setUserImg(e.target.files[0]);\n        }\n    };\n    return (\n        <div className=\"App\">\n            <Route path=\"/\" exact>\n                <Modal\n                    open={open}\n                    onClose={() => {\n                        setOpen(false);\n                    }}\n                >\n                    <div style={modalStyle} className={classes.paper}>\n                        <form>\n                            <center className=\"SignUp\">\n                                <img\n                                    src={logoUrl}\n                                    className=\"Header-logo\"\n                                    draggable=\"false\"\n                                    alt=\"\"\n                                />\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"username\"\n                                    value={username}\n                                    onChange={(e) => {\n                                        setUsername(e.target.value);\n                                    }}\n                                />\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"email\"\n                                    value={email}\n                                    onChange={(e) => {\n                                        setEmail(e.target.value);\n                                    }}\n                                />\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"password\"\n                                    value={password}\n                                    onChange={(e) => {\n                                        setPassword(e.target.value);\n                                    }}\n                                />\n                                <input\n                                    className=\"FilePicker\"\n                                    type=\"file\"\n                                    onChange={handleChange}\n                                ></input>\n                                <Button type=\"submit\" onClick={signUp}>\n                                    Sign Up\n                                </Button>\n                            </center>\n                        </form>\n                    </div>\n                </Modal>\n                <Modal\n                    open={openSignIn}\n                    onClose={() => {\n                        setOpenSingIn(false);\n                    }}\n                >\n                    <div style={modalStyle} className={classes.paper}>\n                        <form>\n                            <center className=\"SignIn\">\n                                <img\n                                    src={logoUrl}\n                                    className=\"Header-logo\"\n                                    draggable=\"false\"\n                                    alt=\"\"\n                                />\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"email\"\n                                    value={email}\n                                    onChange={(e) => {\n                                        setEmail(e.target.value);\n                                    }}\n                                />\n                                <Input\n                                    type=\"text\"\n                                    placeholder=\"password\"\n                                    value={password}\n                                    onChange={(e) => {\n                                        setPassword(e.target.value);\n                                    }}\n                                />\n                                <Button type=\"submit\" onClick={signIn}>\n                                    Log In\n                                </Button>\n                            </center>\n                        </form>\n                    </div>\n                </Modal>\n                <div>\n                    <Header\n                        logoUrl={logoUrl}\n                        user={user}\n                        userImgUrl={userImgUrl}\n                        location={'/'}\n                    />\n                </div>\n\n                <div className=\"AppBody\">\n                    <div className=\"AppPost\">\n                        {posts.map(({ id, post }) => (\n                            <Post\n                                key={id}\n                                postId={id}\n                                user={user}\n                                userImg={post.userImgUrl}\n                                username={post.username}\n                                postImg={post.postImg}\n                                caption={post.caption}\n                                likes={post.likes}\n                                likeNum={post.likeNum}\n                                count={post.count}\n                                // createdTime={diff(post.timestamp)}\n                            />\n                        ))}\n                    </div>\n\n                    <div className=\"AccountModule\">\n                        {user ? (\n                            <div className=\"true\">\n                                <div className=\"trueinfo\">\n                                    <Account\n                                        username={user.displayName}\n                                        userImgUrl={user.photoURL}\n                                        email={user.email}\n                                    />\n                                    <Button onClick={() => auth.signOut()}>\n                                        Log Out\n                                    </Button>\n                                </div>\n                                <div>\n                                    <ImageUpload\n                                        username={user.displayName}\n                                        userImgUrl={userImgUrl}\n                                    />\n                                </div>\n                                <div className=\"Foot\">\n                                    © 2021 INSTAGRAM CLONE FROM VCTR\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"LoginContainer\">\n                                <Button onClick={() => setOpenSingIn(true)}>\n                                    Sign In\n                                </Button>\n                                <Button onClick={() => setOpen(true)}>\n                                    Sign Up\n                                </Button>\n                                <div className=\"Foot\">\n                                    © 2021 INSTAGRAM CLONE FROM VCTR\n                                </div>\n                            </div>\n                        )}\n\n                    </div>\n                </div>\n            </Route>\n            <Route\n                path=\"/direct\"\n                render={() => (\n                    <Direct\n                        logoUrl={logoUrl}\n                        user={user}\n                        userImgUrl={userImgUrl}\n                    />\n                )}\n            />\n            <Route\n                path=\"/explore\"\n                render={() => (\n                    <Explore\n                        logoUrl={logoUrl}\n                        user={user}\n                        userImgUrl={userImgUrl}\n                    />\n                )}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/vctr/Desktop/instagram-clone/src/page/Direct.js",[],"/Users/vctr/Desktop/instagram-clone/src/page/Explore.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/Header.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/Post.js",[],"/Users/vctr/Desktop/instagram-clone/src/firebase.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/Account.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/ImageUpload.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/Comment.js",[],"/Users/vctr/Desktop/instagram-clone/src/component/Footer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":13,"column":8,"nodeType":"62","messageId":"63","endLine":13,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":52,"column":24,"nodeType":"62","messageId":"63","endLine":52,"endColumn":37},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'setUserImgUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]